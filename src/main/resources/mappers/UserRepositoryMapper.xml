<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.withbooks.web.repository.UserRepository">
	
	
	<select id="findByEmail" resultType="User">
	
		select * from user where email = #{email}

	</select>

  	<select id="findById" resultType="User">
	
	  	select * from user where id = #{id}

	</select>
	<select id="findByNickName">

		select nickname from user where id = #{id}

	</select>

	<update id="update">
		update user 

		<set>
			nickname = #{nickname},
			intro = #{intro},
			birth_date = #{birthDate, jdbcType=DATE},
			gender = #{gender},
			email = #{email},
			<if test="img != null">
				img = #{img},
			</if>
		</set>
		where 
			id = #{id}
	</update>

	<insert id="save" parameterType="User">
		INSERT INTO user (
		intro, nickname, email, password, birth_date, gender, role
		)
		VALUES (
		#{intro}, #{nickname}, #{email},  #{password}, #{birthDate}, #{gender}, #{role}
		)
	</insert>

<!-- ================================================================== -->
<!-- /user/join -->
	<select id="countByEmail">
		select
			count(*) count
		from 
			user
		where
			email = #{email}
	</select>

	<select id="countByNickname">
		select
			count(*) count
		from
			user
		where
			nickname = #{nickname}
	</select>

<!-- ================================================================= -->

	<select id="findByAll" resultType="User">
		select 
			u.*,
			uws.status withdraw_status_name
		from
			user u 
				left join 
			user_withdraw_status uws 
				on u.withdraw_status = uws.id
		<where>
			<if test="params.id != null and params.id != '' ">
				u.id = #{params.id} 
			</if>
			<if test="params.email != null and params.email != '' ">
				and email like '%${params.email}%'
			</if>
			<if test="params.nickname != null and params.nickname != '' ">
				and nickname like '%${params.nickname}%'
			</if>
			<if test="params.gender != null and params.gender != '' ">
				and gender = #{params.gender}
			</if>
			<if test="params.birthyear != null and params.birthyear != '' ">
				and birth_date like '${params.birthyear}%'
			</if>
			<if test="params.startdate != null and params.startdate != '' ">
				and date_format(join_date, '%Y-%m-%d') <![CDATA[>=]]> #{params.startdate}
			</if>
			<if test="params.enddate != null and params.enddate != '' ">
				and date_format(join_date, '%Y-%m-%d') <![CDATA[<=]]> #{params.enddate}
			</if>
			<if test="params.status != null and params.status != '' ">
				and withdraw_status = #{params.status}	
			</if>
		</where>	
		order by join_date desc
		limit #{offset}, #{size}
	</select>
	
	<select id="count" resultType="Integer">
		select count(*)
		from user
		<where>
			<if test="id != null and id != '' ">
				id = #{id} 
			</if>
			<if test="email != null and email != '' ">
				and email like '%${email}%'
			</if>
			<if test="nickname != null and nickname != '' ">
				and nickname like '%${nickname}%'
			</if>
			<if test="gender != null and gender != '' ">
				and gender = #{gender}
			</if>
			<if test="birthyear != null and birthyear != '' ">
				and birth_date like '${birthyear}%'
			</if>
			<if test="startdate != null and startdate != '' ">
				and date_format(join_date, '%Y-%m-%d') <![CDATA[>=]]> #{startdate}
			</if>
			<if test="enddate != null and enddate != '' ">
				and date_format(join_date, '%Y-%m-%d') <![CDATA[<=]]> #{enddate}
			</if>
			<if test="status != null and status != '' ">
				and withdraw_status = #{status}	
			</if>
		</where>	
		order by join_date desc
	</select>

	<update id="updateWithdrawStatus">
		update user set 
			withdraw_status = #{status}
		where id in 
		<foreach collection="ids" item="ids" open="(" close=")" separator=",">
			#{ids}
		</foreach>
	</update>

</mapper>