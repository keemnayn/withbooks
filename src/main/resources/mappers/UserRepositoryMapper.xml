<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.withbooks.web.repository.UserRepository">
	
	
	<select id="findByEmail" resultType="User">
	
		select * from user where email = #{email}

	</select>

  	<select id="findById" resultType="User">
	
	  	select * from user where id = #{id}

	</select>
	<select id="findByNickName">

		select nickname from user where id = #{id}

	</select>

	<update id="update">
		update user 

		<set>
			nickname = #{nickname},
			intro = #{intro},
			birth_date = #{birthDate, jdbcType=DATE},
			gender = #{gender},
			email = #{email},
			<if test="img != null">
				img = #{img},
			</if>
		</set>
		where 
			id = #{id}
	</update>

	<insert id="save" parameterType="User">
		INSERT INTO user (
		intro, nickname, email, password, gender, role
		)
		VALUES (
		#{intro}, #{nickname}, #{email}, #{password}, #{gender}, #{role}
		)
	</insert>

	<select id="countByEmail">
		select
			count(*) count
		from 
			user
		where
			email = #{email}
	</select>

	<select id="findByAll" resultType="User">
		select 
			*
		from
			user
		<where>
			<if test="id != null and id != '' ">
				id = #{id} 
			</if>
			<if test="email != null and email != '' ">
				and email like '%#{email}%'
			</if>
			<if test="nickname != null and nickname != '' ">
				and nickname like '%#{nickname}%'
			</if>
			<if test="gender != null and gender != '' ">
				and gender = #{gender}
			</if>
			<if test="birthyear != null and birthyear != '' ">
				and birth_date like '#{birthyear}%'
			</if>
			<if test="startDate != null and startDate != '' ">
				and join_date gt #{startDate}
			</if>
			<if test="endDate != null and endDate != '' ">
				and join_date lt #{endDate}
			</if>
			<if test="status != null and status != '' ">
				and withdraw_status = #{status}	
			</if>
		</where>	
		order by join_date desc
	</select>

	<select id="findByIdShorts" resultType="BookshortsView">
		select 
			s.*, count(s.id) liked
		from
			shorts s
				left join
			shorts_like l ON s.id = l.shorts_id
		where
			s.user_id = #{id}
		group by s.id
		order by reg_date desc
	</select>

</mapper>