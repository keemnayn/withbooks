<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.withbooks.web.repository.BookRepository">
	
	<select id="findAll" resultType="Book">
		SELECT 
			*
		FROM book
		<where>
			<if test="query != null and query != '' ">
				and title like '%${query}%'
			</if>
			<if test="categoryId != null">
				and category_id = ${categoryId}
			</if>
		</where>
		<!-- limit #{offset}, #{size} -->
	</select>
	
	<select id="findById" resultType="Book" parameterType="Long" >
		SELECT 
			*
		FROM
			book
		WHERE
			id = #{id}
	</select>

	<select id="findMapById" resultType="hashmap">
		select
				b.id
				,b.title
				,b.author
				,b.pub_date pubDate
				,b.publisher
				,b.isbn13
				,b.description
				,b.purchase_link purchaseLink
				,b.price
				,b.cover
				,bc.name
		<if test="userId != null">
			,ifnull(bm.user_id = #{userId}, 0) marked
		</if> 
		from book b 
			left join book_category bc 
				on b.category_id = bc.id 
			left join bookmark bm 
				on b.id = bm.book_id 
		where
			b.id = #{bookId}
		group by b.id
	</select>

	<select id="findBoolByISBN13" resultType="int">
		select 
			count(*) cnt 
		from 
			book 
		where 
			isbn13 = #{isbn13}
	</select>

	<!-- <select id="findCountByParams" resultType="int">
		select 
			count(id) count
		from
			book
		<where>
			<if test="params.query != null and params.queryType != null">
				${params.queryType} like '%${params.query}%'
			</if>
			<if test="params.categoryId != null">
				and category_id = #{params.categoryId}
			</if>
		</where>
	</select> -->


<!-- book/list -->
	<select id="findByParams" resultType="Book">
	select 
			*
		from
			(
				select 
					b.id,
					b.title,
					b.purchase_link,
					b.author,
					b.pub_date,
					b.description,
					b.isbn13,
					b.price,
					b.cover,
					b.public_yn,
					b.category_id,
					b.reg_date,
					b.publisher,
					c.name categoryName
				from
					book b left join book_category c on b.category_id = c.id
			<where>
					b.public_yn=1
				<if test="categoryId != null">
					and b.category_id = #{categoryId}
				</if>
				<if test="query != null">
					and (b.title like '%${query}%' or b.author like '%${query}%')
				</if>
			</where>
				order by 
					b.id desc
			) v
		LIMIT #{offset}, #{size}
	</select>

	<select id="findCntByParams" resultType="int">
		select 
			count(id) count
		from
			book
		<where>
				public_yn=1
			<if test="categoryId != null">
				and category_id = #{categoryId}
			</if>
			<if test="query != null and query != '' ">
				and (title like '%${query}%' or author like '%${query}%')
			</if>
		</where>
	</select>
<!-- ================================================================= -->


<!-- admin/book/list -->
	<select id="findAllByParams" resultType="Book">
		select 
			*
		from
			(
				select 
					b.id,
					b.category_id,
					b.title,
					b.author,
					b.pub_date,
					b.publisher,
					b.isbn13,
					b.description,
					b.purchase_link,
					b.price,
					b.cover,
					b.public_yn,
					b.reg_date,
					c.name categoryName,
					count(bs.id) best_count
				from
					book b left join book_category c on b.category_id = c.id 
					left join bestseller bs on b.id = bs.book_id
				group by 
					b.id
				order by 
					b.id desc
			) v
		<where>
			<if test="params.query != null and params.queryType != null">
				${params.queryType} like '%${params.query}%'
			</if>
			<if test="params.categoryId != null">
				and category_id = #{params.categoryId}
			</if>
		</where>
		order by
			id desc
		LIMIT #{offset}, #{size}

	</select>

	<select id="findCountByParams" resultType="int">
		select 
			count(id) count
		from
			book
		<where>
			<if test="params.query != null and params.queryType != null">
				${params.queryType} like '%${params.query}%'
			</if>
			<if test="params.categoryId != null">
				and category_id = #{params.categoryId}
			</if>
		</where>
	</select>
<!-- ================================================================= -->

<!-- admin/book/aladinList -->
<insert id="save">
	insert into
		book(
			category_id,
			category_name,
			cid,
			title,
			author,
			pub_date,
			publisher,
			isbn13,
			description,
			purchase_link,
			price,
			cover,
			reg_date
		)
	values
		<foreach collection="list" item="book" separator=",">
				(
					#{book.categoryId},
					#{book.categoryName},
					#{book.cid},
					#{book.title},
					#{book.author},
					#{book.pubDate},
					#{book.publisher},
					#{book.isbn13},
					#{book.description},
					#{book.purchaseLink},
					#{book.price},
					#{book.cover},
					#{book.regDate}
				)
		</foreach>
</insert>

</mapper>